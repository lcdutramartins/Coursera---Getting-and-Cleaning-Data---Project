find.package("devtools")
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
setwd("E:\\Work\\GitHub\\Coursera---Getting-and-Cleaning-Data\\Quiz 3")
edu <- read.csv("edu.csv", header=TRUE)
gdp <- read.csv("gdp.csv", header=TRUE)
View(edu)
View(gdp)
gdpF <- gdp[which(!is.na(gdp$Rank)),]
gdpF$RankNo <- as.numeric(gdpF$Rank)
View(gdpF)
res <- merge(edu, gdpF, by.x="CountryCode", by.y="Code", all=TRUE)
View(res)
names(res)
res <- merge(gdpF, edu, by.x="Code", by.y="CountryCode", all=TRUE)
View(res)
length(res[which(!is.na(res$RankNo) & !is.na(res$Long.Name),])
length(res[which(!is.na(res$RankNo) & !is.na(res$Long.Name)),])
resF <- res[which(!is.na(res$RankNo) & !is.na(res$Long.Name)),]
sort(res, decreasing=TRUE)
sort(res$RankNo, decreasing=TRUE)
library(plyr)
resS <- arrange(res, desc(res$RankNo))
View(resS)
resFS <- arrange(resF, desc(resF$RankNo))
View(resS)
View(resFS)
head(resFS, n=13)
View(resS)
View(resFS)
tapply(resFS$RankNo, resFS$Region, mean)
tapply(resFS$RankNo, resFS$Income.Group, mean)
quantile(resFS$RankNo)
View(resFS)
q5 <- tail(resFS, n=38)
tapply(q5$Code, q5$Income.Group, count)
library(jpeg)
img <- readJPEG("image.jpg", native=TRUE)
qunatile(img)
quantile(img)
quantile(img, probs=c(0.3, 0.8))
unzip(zipFileName, rawDataFiles, list=FALSE, overwrite=TRUE)
zipFileName
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
zipFileName
as
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
zipFileName
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
unzip(zipFileName, rawDataFiles, list=TRUE)
"tes" + "te"
paste(".\\", rawDataFiles)
paste(".\\", rawDataFiles, sep="")
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
## download zip file, if necessary
## assuring that the working directory contains all files needed to run data analysis
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
## assuring that the working directory contains all files needed to run data analysis
## assuring that the working directory contains all files needed to run data analysis
## assuring that the working directory contains all files needed to run data analysis
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- ".\\UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
##extract
unzip(zipFileName, rawDataFiles, list=FALSE, overwrite=TRUE)
}
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
rawDataFiles <- c(
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
;
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
rawDataFiles <- c("UCI HAR Dataset\\train\\subject_train.txt", "UCI HAR Dataset\\train\\y_train.txt", "UCI HAR Dataset\\train\\X_train.txt", "UCI HAR Dataset\\test\\subject_test.txt", "UCI HAR Dataset\\test\\y_test.txt", "UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- "UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
##extract
unzip(zipFileName, rawDataFiles, list=FALSE, overwrite=TRUE)
}
unzip(zipFileName, rawDataFiles, list=TRUE)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
## assuring that the working directory contains all files needed to run data analysis
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- "UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
zipRawDataFiles <- c(
"UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt",
"UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
##extract
unzip(zipFileName, zipRawDataFiles, list=FALSE, overwrite=TRUE)
}
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
## assuring that the working directory contains all files needed to run data analysis
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- "UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
zipRawDataFiles <- c(
"UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt",
"UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
##extract
unzip(zipFileName, zipRawDataFiles, list=FALSE, overwrite=TRUE, exdir=".\\")
}
setwd("E:\\Work\\GitHub\\Coursera---Getting-and-Cleaning-Data---Project")
## assuring that the working directory contains all files needed to run data analysis
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- "UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
zipRawDataFiles <- c(
"UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt",
"UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
##extract
unzip(zipFileName, zipRawDataFiles, list=FALSE, overwrite=TRUE, exdir=".\\")
}
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
## assuring that the working directory contains all files needed to run data analysis
rawDataFiles <- c(
"UCI HAR Dataset\\train\\subject_train.txt",
"UCI HAR Dataset\\train\\y_train.txt",
"UCI HAR Dataset\\train\\X_train.txt",
"UCI HAR Dataset\\test\\subject_test.txt",
"UCI HAR Dataset\\test\\y_test.txt",
"UCI HAR Dataset\\test\\X_test.txt")
if (!all(file.exists(paste(".\\", rawDataFiles, sep=""))))
{
## download zip file, if necessary
zipFileName <- "UCI HAR Dataset.zip"
if (!file.exists("UCI HAR Dataset.zip"))
{
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipUrl, zipFileName)
}
zipRawDataFiles <- c(
"UCI HAR Dataset/train/subject_train.txt",
"UCI HAR Dataset/train/y_train.txt",
"UCI HAR Dataset/train/X_train.txt",
"UCI HAR Dataset/test/subject_test.txt",
"UCI HAR Dataset/test/y_test.txt",
"UCI HAR Dataset/test/X_test.txt")
##extract
unzip(zipFileName, zipRawDataFiles, list=FALSE, overwrite=TRUE)
}
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/get_rawdata.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/getRawDataFiles.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
source("getRawDataFiles.R")
getRawDataFiles()
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
rawDataFilePaths
Xtrain <- read.table(rawDataFilePaths[3])
View(Xtrain)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/getRawDataFiles.R')
cbind(1, 2)
rbind(1, 2)
cbind("teste", c(1,2))
Activities <- read.table(".\\UCI HAR Dataset\\activity_labels.txt")
View(Activities)
TrainLabelIDs <- read.table(".\\UCI HAR Dataset\\train\\y_train.txt")
View(TrainLabelIDs)
lapply(TrainLabelIDs, function(elt) { Activities[which(Activities$V1 == elt), 2] })
tapply(TrainLabelIDs, function(elt) { Activities[which(Activities$V1 == elt), 2] })
apply(TrainLabelIDs, function(elt) { Activities[which(Activities$V1 == elt), 2] })
apply(TrainLabelIDs, FUN=function(elt) { Activities[which(Activities$V1 == elt), 2] })
apply(TrainLabelIDs, MARGIN=1, FUN=function(elt) { Activities[which(Activities$V1 == elt), 2] })
res<- apply(TrainLabelIDs, MARGIN=1, FUN=function(elt) { Activities[which(Activities$V1 == elt), 2] })
length(res)
head(TrainLabelIDs, n = 30)
cbind(head(TrainLabelIDs, n = 30), head(res, n=30))
any(is.na(res))
Features <- read.table(".\\UCI HAR Dataset\\features.txt")
Features
grep(".mean\(\).", Features$V2)
grep(".mean\(\).", Features$V2)
grep(".mean(\).", Features$V2)
grep(".mean().", Features$V2)
length(grep(".mean().", Features$V2))
length(grep("mean()", Features$V2))
length(grep("mean\(\)", Features$V2))
length(grep("mean\\(\\)", Features$V2))
grep("mean\\(\\)", Features$V2)
ind <- rbind(grep("mean\\(\\)", Features$V2), grep("std\\(\\)", Features$V2))
ind
ind <- cbind(grep("mean\\(\\)", Features$V2), grep("std\\(\\)", Features$V2))
ind
ind <- merge(grep("mean\\(\\)", Features$V2), grep("std\\(\\)", Features$V2))
ind
meanFeaturesIndexes <- grep("mean\\(\\)", Features$V2)
stdFeaturesIndexes <- grep("std\\(\\)", Features$V2)
as.vector(meanFeaturesIndexes)
rbind(as.vector(meanFeaturesIndexes), as.vector(stdFeaturesIndexes))
cbind(as.vector(meanFeaturesIndexes), as.vector(stdFeaturesIndexes))
str(meanFeaturesIndexes)
str(stdFeaturesIndexes)
c(meanFeaturesIndexes, stdFeaturesIndexes)
ind <- c(meanFeaturesIndexes, stdFeaturesIndexes)
ind <- sort(c(meanFeaturesIndexes, stdFeaturesIndexes))
ind
TrainFeatures <- read.table(".\\UCI HAR Dataset\\train\\X_train.txt")
head(TrainFeatures[,ind], n=10)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
rbind(TrainData, TestData)
c(TrainData, TestData)
result <- c(TrainData, TestData)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
resultNames
Features
Features[FeaturesIndexes,2]
as.character(Features[FeaturesIndexes,2])
resultNames <- c("Type", "Subject", "ActivityId", "Activity", as.character(Features[FeaturesIndexes,2]))
resultNames
result <- data.frame()
result
names(result) <- resultNames
result < - data.frame(t(rep(NA,number_of_columns)))
result < - data.frame(t(rep(NA,length(resultNames))))
result < - data.frame(t(rep(NA, length(resultNames))))
result < - data.frame(rep(NA, length(resultNames)))
result < - data.frame(resultNames)
AllData <- c(TrainData, TestData)
dim(AllData)
AllData <- rbind(TrainData, TestData)
AllData <- cbind(TrainData, TestData)
AllData <- rbind(TrainData, TestData)
names(TrainData)
names(TestData)
names(TestData) <- resultNames
names(TrainData) <- resultNames
names(TestData)
names(TrainData) <- resultNames
AllData <- rbind(TrainData, TestData)
7352+2947
str(AllData)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
source("getRawDataFiles.R")
rawDataFilePaths <- getRawDataFiles()
rawDataFilePaths <- getRawDataFiles()
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/getRawDataFiles.R')
rawDataFilePaths <- getRawDataFiles()
rawDataFilePaths
rawDataFilePaths <- getRawDataFiles()
rawDataFilePaths
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
warnings()
averageResult
averageResult[1,]
DF <- averageResult
DFres <- DF[,!(names(DF) %in% c("Type"))]
DFres <- DF[,!(names(DF) %in% c("Type")), drop=TRUE]
averageResult[1,]
paste("mean ", as.character(Features[FeaturesIndexes,2]))
averageResult[1,]
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
warnings()
install.packages("knitr")
library(knitr)
source('E:/Work/GitHub/Coursera---Getting-and-Cleaning-Data---Project/run_analysis.R')
